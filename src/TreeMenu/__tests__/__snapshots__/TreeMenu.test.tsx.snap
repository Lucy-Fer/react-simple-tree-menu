// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeViewMenu should highlight the active node 1`] = `
<div
  onKeyDown={[Function]}
  tabIndex={0}
>
  <input
    aria-label="Type and search"
    onChange={[Function]}
    placeholder="Type and search"
    style={
      Object {
        "border": "none",
        "padding": "1rem 1.5rem",
        "width": "100%",
      }
    }
    type="search"
  />
  <ul
    style={
      Object {
        "borderTop": "1px solid #ccc",
        "listStyleType": "none",
        "paddingLeft": 0,
      }
    }
  >
    <li
      aria-pressed={false}
      key="releasenotes"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 0.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={true}
        />
      </div>
      <span
        onClick={[Function]}
      >
        Release Notes
      </span>
    </li>
    <li
      aria-pressed={false}
      key="releasenotes/desktop-modeler"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 2.5rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={true}
        />
      </div>
      <span
        onClick={[Function]}
      >
        Desktop Modeler
      </span>
    </li>
    <li
      aria-pressed={true}
      key="releasenotes/desktop-modeler/7"
      role="button"
      style={
        Object {
          "background": "#179ed3",
          "borderBottom": "none",
          "boxShadow": "none",
          "color": "white",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 4.25rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={false}
        />
      </div>
      <span
        onClick={[Function]}
      >
        7
      </span>
    </li>
    <li
      aria-pressed={false}
      key="atd"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 2.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <span
        onClick={[Function]}
      >
        ATS Guide
      </span>
    </li>
  </ul>
</div>
`;

exports[`TreeViewMenu should open specified nodes 1`] = `
<div
  onKeyDown={[Function]}
  tabIndex={0}
>
  <input
    aria-label="Type and search"
    onChange={[Function]}
    placeholder="Type and search"
    style={
      Object {
        "border": "none",
        "padding": "1rem 1.5rem",
        "width": "100%",
      }
    }
    type="search"
  />
  <ul
    style={
      Object {
        "borderTop": "1px solid #ccc",
        "listStyleType": "none",
        "paddingLeft": 0,
      }
    }
  >
    <li
      aria-pressed={false}
      key="releasenotes"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 0.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={true}
        />
      </div>
      <span
        onClick={[Function]}
      >
        Release Notes
      </span>
    </li>
    <li
      aria-pressed={false}
      key="releasenotes/desktop-modeler"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 2.5rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={true}
        />
      </div>
      <span
        onClick={[Function]}
      >
        Desktop Modeler
      </span>
    </li>
    <li
      aria-pressed={false}
      key="releasenotes/desktop-modeler/7"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 4.25rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={false}
        />
      </div>
      <span
        onClick={[Function]}
      >
        7
      </span>
    </li>
    <li
      aria-pressed={false}
      key="atd"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 2.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <span
        onClick={[Function]}
      >
        ATS Guide
      </span>
    </li>
  </ul>
</div>
`;

exports[`TreeViewMenu should render the level-1 nodes by default 1`] = `
<div
  onKeyDown={[Function]}
  tabIndex={0}
>
  <input
    aria-label="Type and search"
    onChange={[Function]}
    placeholder="Type and search"
    style={
      Object {
        "border": "none",
        "padding": "1rem 1.5rem",
        "width": "100%",
      }
    }
    type="search"
  />
  <ul
    style={
      Object {
        "borderTop": "1px solid #ccc",
        "listStyleType": "none",
        "paddingLeft": 0,
      }
    }
  >
    <li
      aria-pressed={false}
      key="releasenotes"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 0.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <div
        onClick={[Function]}
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <ToggleIcon
          on={false}
        />
      </div>
      <span
        onClick={[Function]}
      >
        Release Notes
      </span>
    </li>
    <li
      aria-pressed={false}
      key="atd"
      role="button"
      style={
        Object {
          "background": "none",
          "borderBottom": "1px solid #ccc",
          "boxShadow": "none",
          "color": "#333",
          "cursor": "pointer",
          "padding": " .75rem  1rem  .75rem 2.75rem",
          "position": "relative",
          "zIndex": "unset",
        }
      }
    >
      <span
        onClick={[Function]}
      >
        ATS Guide
      </span>
    </li>
  </ul>
</div>
`;
